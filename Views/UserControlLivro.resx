<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABDpJREFUeF7t
        ndFt3FYUBVVKSkklycL2x3aRUlyKS1EpMQmMgOP1XGURQTjc5Rtg/uYBh1yJWiAB/bJYLBaLxWKxWCwW
        n8Hly/Xy99fr980fm6+b/z6LXOIx4cY/1Q2/lUs9FpfL9Y9t3P7TrqOfSS75OFy+Xf+0oc8ql30Mznbz
        d7n0Pjx2dOQzy+X32cac4pl/K5ff5a8v139s3BnkFnTZhtz1VXP/oPavpvvjiqP7WW3fJKthm1KyHnc+
        +1/3P9Ac+QVpf5Gshm1KyXrc8/iZbv6O9SlZDduUkvXYRrz7x3f/gEgVO5OS1bBNKVmPbcS7z//3fvp3
        7ExKVsM2pWQ9bFRKNmJnUrIatikl62GjUrIRO5OS1bBNKVkPG5WSjdiZlKyGbUrJetiolGzEzqRkNWxT
        StbDRqVkI3YmJathm1KyHjYqJRuxMylZDduUkvWwUSnZiJ1JyWrYppSsh41KyUbsTEpWwzalZD1sVEo2
        YmdSshq2KSXrYaNSshE7k5LVsE0pWQ8blZKN2JmUrIZtSsl62KiUbMTOpGQ1bFNK1sNGpWQjdiYlq2Gb
        UrIeNiolG7EzKVkN25SS9bBRKdmInUnJatimlKyHjUrJRuxMSlbDNqVkPWxUSjZiZ1KyGrYpJetho1Ky
        ETuTktWwTSlZDxuVko3YmZSshm1KyXrYqJRsxM6kZDVsU0rWw0alZCN2JiWrYZtSsh42KiUbsTMpWQ3b
        lJL1sFEp2YidSclq2KaUrIeNSslG7ExKVsM2pWQ9bFRKNmJnUrIatikl62GjUrIRO5OS1bBNKVkPG5WS
        jdiZlKyGbUrJetiolGzEzqRkNWxTStbDRqVkI3YmJathm1KyHjYqJRuxMylZDduUkvWwUSnZiJ1JyWrY
        ppSsh41KyUbsTEpWwzalZD1sVEo2YmdSshq2KSXrYaNSshE7k5LVsE0pWQ8blZKN2JmUrIZtSsl62KiU
        bMTOpGQ1bFNK1sNGpWQjdiYlq2GbUrIeNiolG7EzKVkN25SS9bBRKdmInUnJatimlKyHjUr3Zr0z7hOx
        UTeud8Z9JjbqTHIbetioM8lt6GGjziS3oYeNOpPchh426kxyG3rYqDPJbehhoybtnXFHYtv4v999V8MG
        iuM7447CR999V0NG/ubRb/7OR999V8OGpv/1zrijsG390LvvatjY9BF++ne2rR96910NG5uSHR7bnpId
        j23c+z85B/3Gc8u29TGvYxv3mL+6N2xbH/YR9Jh/vG7Ytj7sH+H9P7To6Dcf4TF019fQI17H/qtpY298
        PfqHcPd1HPFRtA+7GTr5fb+Ao34Y277HvI57fn2fVW5Bn23MvT89TyWX32f/ddwGne5D4PKPwRn+5bxb
        ufTjwLeJ03wIXPaxONPjiEs+Jmd4JHGpx2Z/LPFV9e1/TXyaD4VLXCwWi8VisVgsFos7eXn5CTm+Ri7A
        J+c1AAAAAElFTkSuQmCC
</value>
  </data>
</root>