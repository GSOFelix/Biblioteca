<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>